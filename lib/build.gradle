plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'org.jetbrains.kotlin.native.cocoapods'
}
group 'com.example'
version '0.0.1'

apply plugin: 'maven-publish'
apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

kotlin {
    jvm()
    android()
    js {
        browser {
        }
        nodejs {
        }
        binaries.executable()
    }
    // For ARM, should be changed to iosArm32 or iosArm64
    // For Linux, should be changed to e.g. linuxX64
    // For MacOS, should be changed to e.g. macosX64
    // For Windows, should be changed to e.g. mingwX64
    macosX64("macos")
    ios()
    cocoapods {
        // Configure fields required by CocoaPods.
        summary = "Kedux is a kotlin-multiplatform state management library."
        homepage = "Link to a Kotlin/Native module homepage"
    }
    [targets.iosX64, targets.iosArm64].forEach {
        it.binaries
                .findAll { it instanceof org.jetbrains.kotlin.gradle.plugin.mpp.Framework }
                .every {
                    it.baseName = "Kedux"
                }
    }

    sourceSets {
        commonMain {
            dependencies {
                api("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8-native-mt-1.4.0-rc")
                api "org.jetbrains.kotlinx:atomicfu:$atomicfu_version"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.8'
            }
        }
        nonNative {
            dependsOn commonMain
        }
        nativeMain {
            dependsOn commonMain
        }
        nativeTest {
            dependsOn commonTest
            dependsOn nativeMain
        }
        iosMain.dependsOn(nativeMain)
        iosTest.dependsOn(nativeTest)
        macosMain.dependsOn(nativeMain)
        macosTest.dependsOn(nativeTest)
        jvmMain {
            dependsOn nonNative
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        androidMain {
            dependsOn jvmMain
        }
        androidTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependsOn nonNative
        }
        jsTest {
        }

        ios {
            dependencies {
            }
        }
        iosTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
        macos {
            dependencies {
            }
        }
        macosTest {
            dependencies {
            }
        }
    }
}
